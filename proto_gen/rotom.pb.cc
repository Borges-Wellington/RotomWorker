// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: rotom.proto
// Protobuf C++ Version: 6.34.0-dev

#include "rotom.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/internal_visibility.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace RotomProtos {

inline constexpr WelcomeMessage::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        worker_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        origin_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        version_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        useragent_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        device_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        version_code_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WelcomeMessage::WelcomeMessage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(WelcomeMessage_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(internal_visibility(), ::_pbi::ConstantInitialized()) {
}
struct WelcomeMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WelcomeMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WelcomeMessageDefaultTypeInternal() {}
  union {
    WelcomeMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WelcomeMessageDefaultTypeInternal _WelcomeMessage_default_instance_;

inline constexpr MitmResponse_RpcResponse_SingleRpcResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        payload_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        method_{0},
        is_compressed_{false} {}

template <typename>
PROTOBUF_CONSTEXPR MitmResponse_RpcResponse_SingleRpcResponse::MitmResponse_RpcResponse_SingleRpcResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(MitmResponse_RpcResponse_SingleRpcResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(internal_visibility(), ::_pbi::ConstantInitialized()) {
}
struct MitmResponse_RpcResponse_SingleRpcResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MitmResponse_RpcResponse_SingleRpcResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MitmResponse_RpcResponse_SingleRpcResponseDefaultTypeInternal() {}
  union {
    MitmResponse_RpcResponse_SingleRpcResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MitmResponse_RpcResponse_SingleRpcResponseDefaultTypeInternal _MitmResponse_RpcResponse_SingleRpcResponse_default_instance_;

inline constexpr MitmResponse_LoginResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        worker_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        useragent_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_{static_cast< ::RotomProtos::AuthStatus >(0)},
        supports_compression_{false} {}

template <typename>
PROTOBUF_CONSTEXPR MitmResponse_LoginResponse::MitmResponse_LoginResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(MitmResponse_LoginResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(internal_visibility(), ::_pbi::ConstantInitialized()) {
}
struct MitmResponse_LoginResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MitmResponse_LoginResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MitmResponse_LoginResponseDefaultTypeInternal() {}
  union {
    MitmResponse_LoginResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MitmResponse_LoginResponseDefaultTypeInternal _MitmResponse_LoginResponse_default_instance_;

inline constexpr MitmRequest_RpcRequest_SingleRpcRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        payload_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        method_{0},
        is_compressed_{false} {}

template <typename>
PROTOBUF_CONSTEXPR MitmRequest_RpcRequest_SingleRpcRequest::MitmRequest_RpcRequest_SingleRpcRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(MitmRequest_RpcRequest_SingleRpcRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(internal_visibility(), ::_pbi::ConstantInitialized()) {
}
struct MitmRequest_RpcRequest_SingleRpcRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MitmRequest_RpcRequest_SingleRpcRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MitmRequest_RpcRequest_SingleRpcRequestDefaultTypeInternal() {}
  union {
    MitmRequest_RpcRequest_SingleRpcRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MitmRequest_RpcRequest_SingleRpcRequestDefaultTypeInternal _MitmRequest_RpcRequest_SingleRpcRequest_default_instance_;

inline constexpr MitmRequest_LoginRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        token_proto_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        worker_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        source_{static_cast< ::RotomProtos::MitmRequest_LoginRequest_LoginSource >(0)},
        enable_compression_{false} {}

template <typename>
PROTOBUF_CONSTEXPR MitmRequest_LoginRequest::MitmRequest_LoginRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(MitmRequest_LoginRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(internal_visibility(), ::_pbi::ConstantInitialized()) {
}
struct MitmRequest_LoginRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MitmRequest_LoginRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MitmRequest_LoginRequestDefaultTypeInternal() {}
  union {
    MitmRequest_LoginRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MitmRequest_LoginRequestDefaultTypeInternal _MitmRequest_LoginRequest_default_instance_;

inline constexpr MitmResponse_RpcResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        #ifdef PROTOBUF_INTERNAL_REMOVE_ARENA_PTRS_REPEATED_PTR_FIELD
        response_{visibility, ::_pbi::InternalMetadataOffset::Build<
            ::RotomProtos::MitmResponse_RpcResponse,
            PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmResponse_RpcResponse, _impl_.response_)>()
        }
        #else  // !PROTOBUF_INTERNAL_REMOVE_ARENA_PTRS_REPEATED_PTR_FIELD
        response_ {}
        #endif
        ,
        rpc_status_{static_cast< ::RotomProtos::RpcStatus >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR MitmResponse_RpcResponse::MitmResponse_RpcResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(MitmResponse_RpcResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(internal_visibility(), ::_pbi::ConstantInitialized()) {
}
struct MitmResponse_RpcResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MitmResponse_RpcResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MitmResponse_RpcResponseDefaultTypeInternal() {}
  union {
    MitmResponse_RpcResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MitmResponse_RpcResponseDefaultTypeInternal _MitmResponse_RpcResponse_default_instance_;

inline constexpr MitmRequest_RpcRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        #ifdef PROTOBUF_INTERNAL_REMOVE_ARENA_PTRS_REPEATED_PTR_FIELD
        request_{visibility, ::_pbi::InternalMetadataOffset::Build<
            ::RotomProtos::MitmRequest_RpcRequest,
            PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmRequest_RpcRequest, _impl_.request_)>()
        }
        #else  // !PROTOBUF_INTERNAL_REMOVE_ARENA_PTRS_REPEATED_PTR_FIELD
        request_ {}
        #endif
        ,
        lat_{0},
        lon_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MitmRequest_RpcRequest::MitmRequest_RpcRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(MitmRequest_RpcRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(internal_visibility(), ::_pbi::ConstantInitialized()) {
}
struct MitmRequest_RpcRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MitmRequest_RpcRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MitmRequest_RpcRequestDefaultTypeInternal() {}
  union {
    MitmRequest_RpcRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MitmRequest_RpcRequestDefaultTypeInternal _MitmRequest_RpcRequest_default_instance_;

inline constexpr MitmResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        mitm_error_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{0u},
        status_{static_cast< ::RotomProtos::MitmResponse_Status >(0)},
        payload_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR MitmResponse::MitmResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(MitmResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(internal_visibility(), ::_pbi::ConstantInitialized()) {
}
struct MitmResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MitmResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MitmResponseDefaultTypeInternal() {}
  union {
    MitmResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MitmResponseDefaultTypeInternal _MitmResponse_default_instance_;

inline constexpr MitmRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_{0u},
        method_{static_cast< ::RotomProtos::MitmRequest_Method >(0)},
        payload_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR MitmRequest::MitmRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(MitmRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(internal_visibility(), ::_pbi::ConstantInitialized()) {
}
struct MitmRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MitmRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MitmRequestDefaultTypeInternal() {}
  union {
    MitmRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MitmRequestDefaultTypeInternal _MitmRequest_default_instance_;
}  // namespace RotomProtos
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_rotom_2eproto[5];
static constexpr const ::_pb::ServiceDescriptor* PROTOBUF_NONNULL* PROTOBUF_NULLABLE
    file_level_service_descriptors_rotom_2eproto = nullptr;
const ::uint32_t
    TableStruct_rotom_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmRequest_LoginRequest, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmRequest_LoginRequest, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmRequest_LoginRequest, _impl_.source_),
        PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmRequest_LoginRequest, _impl_.token_proto_),
        PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmRequest_LoginRequest, _impl_.worker_id_),
        PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmRequest_LoginRequest, _impl_.enable_compression_),
        0,
        3,
        1,
        2,
        4,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmRequest_RpcRequest_SingleRpcRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmRequest_RpcRequest_SingleRpcRequest, _impl_.method_),
        PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmRequest_RpcRequest_SingleRpcRequest, _impl_.payload_),
        PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmRequest_RpcRequest_SingleRpcRequest, _impl_.is_compressed_),
        1,
        0,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmRequest_RpcRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmRequest_RpcRequest, _impl_.request_),
        PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmRequest_RpcRequest, _impl_.lat_),
        PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmRequest_RpcRequest, _impl_.lon_),
        0,
        1,
        2,
        0x085, // bitmap
        PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmRequest, _impl_._oneof_case_[0]),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmRequest, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmRequest, _impl_.method_),
        PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmRequest, _impl_.payload_),
        PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmRequest, _impl_.payload_),
        PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmRequest, _impl_.payload_),
        0,
        1,
        ~0u,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmResponse_LoginResponse, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmResponse_LoginResponse, _impl_.worker_id_),
        PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmResponse_LoginResponse, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmResponse_LoginResponse, _impl_.supports_compression_),
        PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmResponse_LoginResponse, _impl_.useragent_),
        0,
        2,
        3,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmResponse_RpcResponse_SingleRpcResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmResponse_RpcResponse_SingleRpcResponse, _impl_.method_),
        PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmResponse_RpcResponse_SingleRpcResponse, _impl_.payload_),
        PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmResponse_RpcResponse_SingleRpcResponse, _impl_.is_compressed_),
        1,
        0,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmResponse_RpcResponse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmResponse_RpcResponse, _impl_.rpc_status_),
        PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmResponse_RpcResponse, _impl_.response_),
        1,
        0,
        0x085, // bitmap
        PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmResponse, _impl_._oneof_case_[0]),
        10, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmResponse, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmResponse, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmResponse, _impl_.payload_),
        PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmResponse, _impl_.payload_),
        PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmResponse, _impl_.mitm_error_),
        PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmResponse, _impl_.payload_),
        1,
        2,
        ~0u,
        ~0u,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::RotomProtos::WelcomeMessage, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::RotomProtos::WelcomeMessage, _impl_.worker_id_),
        PROTOBUF_FIELD_OFFSET(::RotomProtos::WelcomeMessage, _impl_.origin_),
        PROTOBUF_FIELD_OFFSET(::RotomProtos::WelcomeMessage, _impl_.version_code_),
        PROTOBUF_FIELD_OFFSET(::RotomProtos::WelcomeMessage, _impl_.version_name_),
        PROTOBUF_FIELD_OFFSET(::RotomProtos::WelcomeMessage, _impl_.useragent_),
        PROTOBUF_FIELD_OFFSET(::RotomProtos::WelcomeMessage, _impl_.device_id_),
        0,
        1,
        5,
        2,
        3,
        4,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::RotomProtos::MitmRequest_LoginRequest)},
        {13, sizeof(::RotomProtos::MitmRequest_RpcRequest_SingleRpcRequest)},
        {22, sizeof(::RotomProtos::MitmRequest_RpcRequest)},
        {31, sizeof(::RotomProtos::MitmRequest)},
        {44, sizeof(::RotomProtos::MitmResponse_LoginResponse)},
        {55, sizeof(::RotomProtos::MitmResponse_RpcResponse_SingleRpcResponse)},
        {64, sizeof(::RotomProtos::MitmResponse_RpcResponse)},
        {71, sizeof(::RotomProtos::MitmResponse)},
        {86, sizeof(::RotomProtos::WelcomeMessage)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::RotomProtos::_MitmRequest_LoginRequest_default_instance_._instance,
    &::RotomProtos::_MitmRequest_RpcRequest_SingleRpcRequest_default_instance_._instance,
    &::RotomProtos::_MitmRequest_RpcRequest_default_instance_._instance,
    &::RotomProtos::_MitmRequest_default_instance_._instance,
    &::RotomProtos::_MitmResponse_LoginResponse_default_instance_._instance,
    &::RotomProtos::_MitmResponse_RpcResponse_SingleRpcResponse_default_instance_._instance,
    &::RotomProtos::_MitmResponse_RpcResponse_default_instance_._instance,
    &::RotomProtos::_MitmResponse_default_instance_._instance,
    &::RotomProtos::_WelcomeMessage_default_instance_._instance,
};
const char descriptor_table_protodef_rotom_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\013rotom.proto\022\013RotomProtos\"\272\005\n\013MitmReque"
    "st\022\n\n\002id\030\001 \001(\r\022/\n\006method\030\002 \001(\0162\037.RotomPr"
    "otos.MitmRequest.Method\022>\n\rlogin_request"
    "\030\003 \001(\0132%.RotomProtos.MitmRequest.LoginRe"
    "questH\000\022:\n\013rpc_request\030\004 \001(\0132#.RotomProt"
    "os.MitmRequest.RpcRequestH\000\032\371\001\n\014LoginReq"
    "uest\022\020\n\010username\030\001 \001(\t\022A\n\006source\030\002 \001(\01621"
    ".RotomProtos.MitmRequest.LoginRequest.Lo"
    "ginSource\022\023\n\013token_proto\030\003 \001(\014\022\021\n\tworker"
    "_id\030\004 \001(\t\022\032\n\022enable_compression\030\005 \001(\010\"P\n"
    "\013LoginSource\022\t\n\005UNSET\020\000\022\007\n\003PTC\020\001\022\r\n\tPTC_"
    "OAUTH\020\002\022\006\n\002FB\020\003\022\n\n\006GOOGLE\020\004\022\n\n\006N_KIDS\020\005\032"
    "\271\001\n\nRpcRequest\022E\n\007request\030\001 \003(\01324.RotomP"
    "rotos.MitmRequest.RpcRequest.SingleRpcRe"
    "quest\022\013\n\003lat\030\002 \001(\001\022\013\n\003lon\030\003 \001(\001\032J\n\020Singl"
    "eRpcRequest\022\016\n\006method\030\001 \001(\005\022\017\n\007payload\030\002"
    " \001(\014\022\025\n\ris_compressed\030\003 \001(\010\"/\n\006Method\022\t\n"
    "\005UNSET\020\000\022\t\n\005LOGIN\020\001\022\017\n\013RPC_REQUEST\020\002B\t\n\007"
    "payload\"\277\005\n\014MitmResponse\022\n\n\002id\030\001 \001(\r\0220\n\006"
    "status\030\002 \001(\0162 .RotomProtos.MitmResponse."
    "Status\022A\n\016login_response\030\003 \001(\0132\'.RotomPr"
    "otos.MitmResponse.LoginResponseH\000\022=\n\014rpc"
    "_response\030\004 \001(\0132%.RotomProtos.MitmRespon"
    "se.RpcResponseH\000\022\022\n\nmitm_error\030d \001(\t\032|\n\r"
    "LoginResponse\022\021\n\tworker_id\030\001 \001(\t\022\'\n\006stat"
    "us\030\002 \001(\0162\027.RotomProtos.AuthStatus\022\034\n\024sup"
    "ports_compression\030\003 \001(\010\022\021\n\tuseragent\030\004 \001"
    "(\t\032\321\001\n\013RpcResponse\022*\n\nrpc_status\030\001 \001(\0162\026"
    ".RotomProtos.RpcStatus\022I\n\010response\030\002 \003(\013"
    "27.RotomProtos.MitmResponse.RpcResponse."
    "SingleRpcResponse\032K\n\021SingleRpcResponse\022\016"
    "\n\006method\030\001 \001(\005\022\017\n\007payload\030\002 \001(\014\022\025\n\ris_co"
    "mpressed\030\003 \001(\010\"~\n\006Status\022\t\n\005UNSET\020\000\022\014\n\007S"
    "UCCESS\020\310\001\022\022\n\rERROR_UNKNOWN\020\364\003\022\026\n\021ERROR_R"
    "ETRY_LATER\020\365\003\022\031\n\024ERROR_WORKER_STOPPED\020\366\003"
    "\022\024\n\017ERROR_RECONNECT\020\367\003B\t\n\007payload\"\205\001\n\016We"
    "lcomeMessage\022\021\n\tworker_id\030\001 \001(\t\022\016\n\006origi"
    "n\030\002 \001(\t\022\024\n\014version_code\030\003 \001(\005\022\024\n\014version"
    "_name\030\004 \001(\t\022\021\n\tuseragent\030\005 \001(\t\022\021\n\tdevice"
    "_id\030\006 \001(\t*\242\003\n\nAuthStatus\022\025\n\021AUTH_STATUS_"
    "UNSET\020\000\022)\n%AUTH_STATUS_AUTH_TOKEN_REQUES"
    "T_FAILED\020\001\022$\n AUTH_STATUS_AUTH_TOKEN_REQ"
    "UESTED\020\002\022\036\n\032AUTH_STATUS_GOT_AUTH_TOKEN\020\003"
    "\022#\n\037AUTH_STATUS_DEVICE_INCOMPATIBLE\020\004\022\036\n"
    "\032AUTH_STATUS_USER_NOT_FOUND\020\005\022\035\n\031AUTH_ST"
    "ATUS_ACCESS_DENIED\020\006\022 \n\034AUTH_STATUS_ACCE"
    "SS_SUSPENDED\020\007\022#\n\037AUTH_STATUS_ACCESS_RAT"
    "E_LIMITED\020\010\022\"\n\036AUTH_STATUS_SESSION_TERMI"
    "NATED\020\t\022\036\n\032AUTH_STATUS_SESSION_FAILED\020\n\022"
    "\035\n\031AUTH_STATUS_LOGIN_TIMEOUT\020\024*\260\005\n\tRpcSt"
    "atus\022\030\n\024RPC_STATUS_UNDEFINED\020\000\022\026\n\022RPC_ST"
    "ATUS_SUCCESS\020\001\022\033\n\027RPC_STATUS_BAD_RESPONS"
    "E\020\003\022\033\n\027RPC_STATUS_ACTION_ERROR\020\004\022\035\n\031RPC_"
    "STATUS_DISPATCH_ERROR\020\005\022\033\n\027RPC_STATUS_SE"
    "RVER_ERROR\020\006\022\037\n\033RPC_STATUS_ASSIGNMENT_ER"
    "ROR\020\007\022\035\n\031RPC_STATUS_PROTOCOL_ERROR\020\010\022#\n\037"
    "RPC_STATUS_AUTHENTICATION_ERROR\020\t\022 \n\034RPC"
    "_STATUS_CANCELLED_REQUEST\020\n\022\034\n\030RPC_STATU"
    "S_UNKNOWN_ERROR\020\013\022\037\n\033RPC_STATUS_NO_RETRI"
    "ES_ERROR\020\014\022!\n\035RPC_STATUS_UNAUTHORIZED_ER"
    "ROR\020\r\022\034\n\030RPC_STATUS_PARSING_ERROR\020\016\022\034\n\030R"
    "PC_STATUS_ACCESS_DENIED\020\017\022\037\n\033RPC_STATUS_"
    "ACCESS_SUSPENDED\020\020\022\"\n\036RPC_STATUS_DEVICE_"
    "INCOMPATIBLE\020\021\022\"\n\036RPC_STATUS_ACCESS_RATE"
    "_LIMITED\020\022\022$\n RPC_STATUS_GOOGLE_PLAY_NOT"
    "_READY\020\023\022\037\n\033RPC_STATUS_LOGIN_ERROR_BAIL\020"
    "\024\022&\n\"RPC_STATUS_MITM_DISALLOWED_REQUEST\020"
    "cb\006proto3"
};
static ::absl::once_flag descriptor_table_rotom_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_rotom_2eproto = {
    false,
    false,
    2689,
    descriptor_table_protodef_rotom_2eproto,
    "rotom.proto",
    &descriptor_table_rotom_2eproto_once,
    nullptr,
    0,
    9,
    schemas,
    file_default_instances,
    TableStruct_rotom_2eproto::offsets,
    file_level_enum_descriptors_rotom_2eproto,
    file_level_service_descriptors_rotom_2eproto,
};
namespace RotomProtos {
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL MitmRequest_LoginRequest_LoginSource_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_rotom_2eproto);
  return file_level_enum_descriptors_rotom_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t MitmRequest_LoginRequest_LoginSource_internal_data_[] = {
    393216u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL MitmRequest_Method_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_rotom_2eproto);
  return file_level_enum_descriptors_rotom_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t MitmRequest_Method_internal_data_[] = {
    196608u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL MitmResponse_Status_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_rotom_2eproto);
  return file_level_enum_descriptors_rotom_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t MitmResponse_Status_internal_data_[] = {
    65536u, 327680u, 502u, 500u, 503u, 200u, 501u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL AuthStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_rotom_2eproto);
  return file_level_enum_descriptors_rotom_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t AuthStatus_internal_data_[] = {
    720896u, 32u, 512u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL RpcStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_rotom_2eproto);
  return file_level_enum_descriptors_rotom_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t RpcStatus_internal_data_[] = {
    131072u, 65568u, 524286u, 99u, };
// ===================================================================

class MitmRequest_LoginRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<MitmRequest_LoginRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MitmRequest_LoginRequest, _impl_._has_bits_);
};

MitmRequest_LoginRequest::MitmRequest_LoginRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MitmRequest_LoginRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RotomProtos.MitmRequest.LoginRequest)
}
PROTOBUF_NDEBUG_INLINE MitmRequest_LoginRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::RotomProtos::MitmRequest_LoginRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        username_(arena, from.username_),
        token_proto_(arena, from.token_proto_),
        worker_id_(arena, from.worker_id_) {}

MitmRequest_LoginRequest::MitmRequest_LoginRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const MitmRequest_LoginRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MitmRequest_LoginRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MitmRequest_LoginRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char*>(&_impl_) +
               offsetof(Impl_, source_),
           reinterpret_cast<const char*>(&from._impl_) +
               offsetof(Impl_, source_),
           offsetof(Impl_, enable_compression_) -
               offsetof(Impl_, source_) +
               sizeof(Impl_::enable_compression_));

  // @@protoc_insertion_point(copy_constructor:RotomProtos.MitmRequest.LoginRequest)
}
PROTOBUF_NDEBUG_INLINE MitmRequest_LoginRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        username_(arena),
        token_proto_(arena),
        worker_id_(arena) {}

inline void MitmRequest_LoginRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char*>(&_impl_) +
               offsetof(Impl_, source_),
           0,
           offsetof(Impl_, enable_compression_) -
               offsetof(Impl_, source_) +
               sizeof(Impl_::enable_compression_));
}
MitmRequest_LoginRequest::~MitmRequest_LoginRequest() {
  // @@protoc_insertion_point(destructor:RotomProtos.MitmRequest.LoginRequest)
  SharedDtor(*this);
}
inline void MitmRequest_LoginRequest::SharedDtor(MessageLite& self) {
  MitmRequest_LoginRequest& this_ = static_cast<MitmRequest_LoginRequest&>(self);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.username_.Destroy();
  this_._impl_.token_proto_.Destroy();
  this_._impl_.worker_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL MitmRequest_LoginRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MitmRequest_LoginRequest(arena);
}
constexpr auto MitmRequest_LoginRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MitmRequest_LoginRequest),
                                            alignof(MitmRequest_LoginRequest));
}
constexpr auto MitmRequest_LoginRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MitmRequest_LoginRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MitmRequest_LoginRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MitmRequest_LoginRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MitmRequest_LoginRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<MitmRequest_LoginRequest>(), &MitmRequest_LoginRequest::ByteSizeLong,
              &MitmRequest_LoginRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MitmRequest_LoginRequest, _impl_._cached_size_),
          false,
      },
      &MitmRequest_LoginRequest::kDescriptorMethods,
      &descriptor_table_rotom_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull MitmRequest_LoginRequest_class_data_ =
        MitmRequest_LoginRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
MitmRequest_LoginRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MitmRequest_LoginRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MitmRequest_LoginRequest_class_data_.tc_table);
  return MitmRequest_LoginRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 62, 2>
MitmRequest_LoginRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MitmRequest_LoginRequest, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    MitmRequest_LoginRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RotomProtos::MitmRequest_LoginRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string username = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0,
      PROTOBUF_FIELD_OFFSET(MitmRequest_LoginRequest, _impl_.username_)}},
    // .RotomProtos.MitmRequest.LoginRequest.LoginSource source = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MitmRequest_LoginRequest, _impl_.source_), 3>(),
     {16, 3, 0,
      PROTOBUF_FIELD_OFFSET(MitmRequest_LoginRequest, _impl_.source_)}},
    // bytes token_proto = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 1, 0,
      PROTOBUF_FIELD_OFFSET(MitmRequest_LoginRequest, _impl_.token_proto_)}},
    // string worker_id = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 2, 0,
      PROTOBUF_FIELD_OFFSET(MitmRequest_LoginRequest, _impl_.worker_id_)}},
    // bool enable_compression = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(MitmRequest_LoginRequest, _impl_.enable_compression_), 4>(),
     {40, 4, 0,
      PROTOBUF_FIELD_OFFSET(MitmRequest_LoginRequest, _impl_.enable_compression_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string username = 1;
    {PROTOBUF_FIELD_OFFSET(MitmRequest_LoginRequest, _impl_.username_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .RotomProtos.MitmRequest.LoginRequest.LoginSource source = 2;
    {PROTOBUF_FIELD_OFFSET(MitmRequest_LoginRequest, _impl_.source_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // bytes token_proto = 3;
    {PROTOBUF_FIELD_OFFSET(MitmRequest_LoginRequest, _impl_.token_proto_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // string worker_id = 4;
    {PROTOBUF_FIELD_OFFSET(MitmRequest_LoginRequest, _impl_.worker_id_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool enable_compression = 5;
    {PROTOBUF_FIELD_OFFSET(MitmRequest_LoginRequest, _impl_.enable_compression_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\44\10\0\0\11\0\0\0"
    "RotomProtos.MitmRequest.LoginRequest"
    "username"
    "worker_id"
  }},
};
PROTOBUF_NOINLINE void MitmRequest_LoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:RotomProtos.MitmRequest.LoginRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000007U)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      _impl_.username_.ClearNonDefaultToEmpty();
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      _impl_.token_proto_.ClearNonDefaultToEmpty();
    }
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      _impl_.worker_id_.ClearNonDefaultToEmpty();
    }
  }
  if (BatchCheckHasBit(cached_has_bits, 0x00000018U)) {
    ::memset(&_impl_.source_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.enable_compression_) -
        reinterpret_cast<char*>(&_impl_.source_)) + sizeof(_impl_.enable_compression_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL MitmRequest_LoginRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const MitmRequest_LoginRequest& this_ = static_cast<const MitmRequest_LoginRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL MitmRequest_LoginRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const MitmRequest_LoginRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:RotomProtos.MitmRequest.LoginRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // string username = 1;
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    if (!this_._internal_username().empty()) {
      const ::std::string& _s = this_._internal_username();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "RotomProtos.MitmRequest.LoginRequest.username");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // .RotomProtos.MitmRequest.LoginRequest.LoginSource source = 2;
  if (CheckHasBit(cached_has_bits, 0x00000008U)) {
    if (this_._internal_source() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this_._internal_source(), target);
    }
  }

  // bytes token_proto = 3;
  if (CheckHasBit(cached_has_bits, 0x00000002U)) {
    if (!this_._internal_token_proto().empty()) {
      const ::std::string& _s = this_._internal_token_proto();
      target = stream->WriteBytesMaybeAliased(3, _s, target);
    }
  }

  // string worker_id = 4;
  if (CheckHasBit(cached_has_bits, 0x00000004U)) {
    if (!this_._internal_worker_id().empty()) {
      const ::std::string& _s = this_._internal_worker_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "RotomProtos.MitmRequest.LoginRequest.worker_id");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // bool enable_compression = 5;
  if (CheckHasBit(cached_has_bits, 0x00000010U)) {
    if (this_._internal_enable_compression() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          5, this_._internal_enable_compression(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RotomProtos.MitmRequest.LoginRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t MitmRequest_LoginRequest::ByteSizeLong(const MessageLite& base) {
  const MitmRequest_LoginRequest& this_ = static_cast<const MitmRequest_LoginRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t MitmRequest_LoginRequest::ByteSizeLong() const {
  const MitmRequest_LoginRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:RotomProtos.MitmRequest.LoginRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x0000001fU)) {
    // string username = 1;
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!this_._internal_username().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_username());
      }
    }
    // bytes token_proto = 3;
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (!this_._internal_token_proto().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_token_proto());
      }
    }
    // string worker_id = 4;
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      if (!this_._internal_worker_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_worker_id());
      }
    }
    // .RotomProtos.MitmRequest.LoginRequest.LoginSource source = 2;
    if (CheckHasBit(cached_has_bits, 0x00000008U)) {
      if (this_._internal_source() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_source());
      }
    }
    // bool enable_compression = 5;
    if (CheckHasBit(cached_has_bits, 0x00000010U)) {
      if (this_._internal_enable_compression() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void MitmRequest_LoginRequest::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg) {
   auto* const _this =
      static_cast<MitmRequest_LoginRequest*>(&to_msg);
  auto& from = static_cast<const MitmRequest_LoginRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    from.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:RotomProtos.MitmRequest.LoginRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x0000001fU)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!from._internal_username().empty()) {
        _this->_internal_set_username(from._internal_username());
      } else {
        if (_this->_impl_.username_.IsDefault()) {
          _this->_internal_set_username("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (!from._internal_token_proto().empty()) {
        _this->_internal_set_token_proto(from._internal_token_proto());
      } else {
        if (_this->_impl_.token_proto_.IsDefault()) {
          _this->_internal_set_token_proto("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      if (!from._internal_worker_id().empty()) {
        _this->_internal_set_worker_id(from._internal_worker_id());
      } else {
        if (_this->_impl_.worker_id_.IsDefault()) {
          _this->_internal_set_worker_id("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000008U)) {
      if (from._internal_source() != 0) {
        _this->_impl_.source_ = from._impl_.source_;
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000010U)) {
      if (from._internal_enable_compression() != 0) {
        _this->_impl_.enable_compression_ = from._impl_.enable_compression_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void MitmRequest_LoginRequest::CopyFrom(const MitmRequest_LoginRequest& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:RotomProtos.MitmRequest.LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MitmRequest_LoginRequest::InternalSwap(MitmRequest_LoginRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_proto_, &other->_impl_.token_proto_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.worker_id_, &other->_impl_.worker_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MitmRequest_LoginRequest, _impl_.enable_compression_)
      + sizeof(MitmRequest_LoginRequest::_impl_.enable_compression_)
      - PROTOBUF_FIELD_OFFSET(MitmRequest_LoginRequest, _impl_.source_)>(
          reinterpret_cast<char*>(&_impl_.source_),
          reinterpret_cast<char*>(&other->_impl_.source_));
}

::google::protobuf::Metadata MitmRequest_LoginRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MitmRequest_RpcRequest_SingleRpcRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<MitmRequest_RpcRequest_SingleRpcRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MitmRequest_RpcRequest_SingleRpcRequest, _impl_._has_bits_);
};

MitmRequest_RpcRequest_SingleRpcRequest::MitmRequest_RpcRequest_SingleRpcRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MitmRequest_RpcRequest_SingleRpcRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RotomProtos.MitmRequest.RpcRequest.SingleRpcRequest)
}
PROTOBUF_NDEBUG_INLINE MitmRequest_RpcRequest_SingleRpcRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::RotomProtos::MitmRequest_RpcRequest_SingleRpcRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        payload_(arena, from.payload_) {}

MitmRequest_RpcRequest_SingleRpcRequest::MitmRequest_RpcRequest_SingleRpcRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const MitmRequest_RpcRequest_SingleRpcRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MitmRequest_RpcRequest_SingleRpcRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MitmRequest_RpcRequest_SingleRpcRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char*>(&_impl_) +
               offsetof(Impl_, method_),
           reinterpret_cast<const char*>(&from._impl_) +
               offsetof(Impl_, method_),
           offsetof(Impl_, is_compressed_) -
               offsetof(Impl_, method_) +
               sizeof(Impl_::is_compressed_));

  // @@protoc_insertion_point(copy_constructor:RotomProtos.MitmRequest.RpcRequest.SingleRpcRequest)
}
PROTOBUF_NDEBUG_INLINE MitmRequest_RpcRequest_SingleRpcRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        payload_(arena) {}

inline void MitmRequest_RpcRequest_SingleRpcRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char*>(&_impl_) +
               offsetof(Impl_, method_),
           0,
           offsetof(Impl_, is_compressed_) -
               offsetof(Impl_, method_) +
               sizeof(Impl_::is_compressed_));
}
MitmRequest_RpcRequest_SingleRpcRequest::~MitmRequest_RpcRequest_SingleRpcRequest() {
  // @@protoc_insertion_point(destructor:RotomProtos.MitmRequest.RpcRequest.SingleRpcRequest)
  SharedDtor(*this);
}
inline void MitmRequest_RpcRequest_SingleRpcRequest::SharedDtor(MessageLite& self) {
  MitmRequest_RpcRequest_SingleRpcRequest& this_ = static_cast<MitmRequest_RpcRequest_SingleRpcRequest&>(self);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.payload_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL MitmRequest_RpcRequest_SingleRpcRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MitmRequest_RpcRequest_SingleRpcRequest(arena);
}
constexpr auto MitmRequest_RpcRequest_SingleRpcRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MitmRequest_RpcRequest_SingleRpcRequest),
                                            alignof(MitmRequest_RpcRequest_SingleRpcRequest));
}
constexpr auto MitmRequest_RpcRequest_SingleRpcRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MitmRequest_RpcRequest_SingleRpcRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MitmRequest_RpcRequest_SingleRpcRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MitmRequest_RpcRequest_SingleRpcRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MitmRequest_RpcRequest_SingleRpcRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<MitmRequest_RpcRequest_SingleRpcRequest>(), &MitmRequest_RpcRequest_SingleRpcRequest::ByteSizeLong,
              &MitmRequest_RpcRequest_SingleRpcRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MitmRequest_RpcRequest_SingleRpcRequest, _impl_._cached_size_),
          false,
      },
      &MitmRequest_RpcRequest_SingleRpcRequest::kDescriptorMethods,
      &descriptor_table_rotom_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull MitmRequest_RpcRequest_SingleRpcRequest_class_data_ =
        MitmRequest_RpcRequest_SingleRpcRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
MitmRequest_RpcRequest_SingleRpcRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MitmRequest_RpcRequest_SingleRpcRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MitmRequest_RpcRequest_SingleRpcRequest_class_data_.tc_table);
  return MitmRequest_RpcRequest_SingleRpcRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
MitmRequest_RpcRequest_SingleRpcRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MitmRequest_RpcRequest_SingleRpcRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    MitmRequest_RpcRequest_SingleRpcRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RotomProtos::MitmRequest_RpcRequest_SingleRpcRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 method = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MitmRequest_RpcRequest_SingleRpcRequest, _impl_.method_), 1>(),
     {8, 1, 0,
      PROTOBUF_FIELD_OFFSET(MitmRequest_RpcRequest_SingleRpcRequest, _impl_.method_)}},
    // bytes payload = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 0, 0,
      PROTOBUF_FIELD_OFFSET(MitmRequest_RpcRequest_SingleRpcRequest, _impl_.payload_)}},
    // bool is_compressed = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(MitmRequest_RpcRequest_SingleRpcRequest, _impl_.is_compressed_), 2>(),
     {24, 2, 0,
      PROTOBUF_FIELD_OFFSET(MitmRequest_RpcRequest_SingleRpcRequest, _impl_.is_compressed_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 method = 1;
    {PROTOBUF_FIELD_OFFSET(MitmRequest_RpcRequest_SingleRpcRequest, _impl_.method_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // bytes payload = 2;
    {PROTOBUF_FIELD_OFFSET(MitmRequest_RpcRequest_SingleRpcRequest, _impl_.payload_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // bool is_compressed = 3;
    {PROTOBUF_FIELD_OFFSET(MitmRequest_RpcRequest_SingleRpcRequest, _impl_.is_compressed_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void MitmRequest_RpcRequest_SingleRpcRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:RotomProtos.MitmRequest.RpcRequest.SingleRpcRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    _impl_.payload_.ClearNonDefaultToEmpty();
  }
  if (BatchCheckHasBit(cached_has_bits, 0x00000006U)) {
    ::memset(&_impl_.method_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.is_compressed_) -
        reinterpret_cast<char*>(&_impl_.method_)) + sizeof(_impl_.is_compressed_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL MitmRequest_RpcRequest_SingleRpcRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const MitmRequest_RpcRequest_SingleRpcRequest& this_ = static_cast<const MitmRequest_RpcRequest_SingleRpcRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL MitmRequest_RpcRequest_SingleRpcRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const MitmRequest_RpcRequest_SingleRpcRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:RotomProtos.MitmRequest.RpcRequest.SingleRpcRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // int32 method = 1;
  if (CheckHasBit(cached_has_bits, 0x00000002U)) {
    if (this_._internal_method() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_method(), target);
    }
  }

  // bytes payload = 2;
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    if (!this_._internal_payload().empty()) {
      const ::std::string& _s = this_._internal_payload();
      target = stream->WriteBytesMaybeAliased(2, _s, target);
    }
  }

  // bool is_compressed = 3;
  if (CheckHasBit(cached_has_bits, 0x00000004U)) {
    if (this_._internal_is_compressed() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_is_compressed(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RotomProtos.MitmRequest.RpcRequest.SingleRpcRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t MitmRequest_RpcRequest_SingleRpcRequest::ByteSizeLong(const MessageLite& base) {
  const MitmRequest_RpcRequest_SingleRpcRequest& this_ = static_cast<const MitmRequest_RpcRequest_SingleRpcRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t MitmRequest_RpcRequest_SingleRpcRequest::ByteSizeLong() const {
  const MitmRequest_RpcRequest_SingleRpcRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:RotomProtos.MitmRequest.RpcRequest.SingleRpcRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000007U)) {
    // bytes payload = 2;
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!this_._internal_payload().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_payload());
      }
    }
    // int32 method = 1;
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (this_._internal_method() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_method());
      }
    }
    // bool is_compressed = 3;
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      if (this_._internal_is_compressed() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void MitmRequest_RpcRequest_SingleRpcRequest::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg) {
   auto* const _this =
      static_cast<MitmRequest_RpcRequest_SingleRpcRequest*>(&to_msg);
  auto& from = static_cast<const MitmRequest_RpcRequest_SingleRpcRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    from.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:RotomProtos.MitmRequest.RpcRequest.SingleRpcRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000007U)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!from._internal_payload().empty()) {
        _this->_internal_set_payload(from._internal_payload());
      } else {
        if (_this->_impl_.payload_.IsDefault()) {
          _this->_internal_set_payload("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (from._internal_method() != 0) {
        _this->_impl_.method_ = from._impl_.method_;
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      if (from._internal_is_compressed() != 0) {
        _this->_impl_.is_compressed_ = from._impl_.is_compressed_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void MitmRequest_RpcRequest_SingleRpcRequest::CopyFrom(const MitmRequest_RpcRequest_SingleRpcRequest& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:RotomProtos.MitmRequest.RpcRequest.SingleRpcRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MitmRequest_RpcRequest_SingleRpcRequest::InternalSwap(MitmRequest_RpcRequest_SingleRpcRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.payload_, &other->_impl_.payload_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MitmRequest_RpcRequest_SingleRpcRequest, _impl_.is_compressed_)
      + sizeof(MitmRequest_RpcRequest_SingleRpcRequest::_impl_.is_compressed_)
      - PROTOBUF_FIELD_OFFSET(MitmRequest_RpcRequest_SingleRpcRequest, _impl_.method_)>(
          reinterpret_cast<char*>(&_impl_.method_),
          reinterpret_cast<char*>(&other->_impl_.method_));
}

::google::protobuf::Metadata MitmRequest_RpcRequest_SingleRpcRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MitmRequest_RpcRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<MitmRequest_RpcRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MitmRequest_RpcRequest, _impl_._has_bits_);
};

MitmRequest_RpcRequest::MitmRequest_RpcRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MitmRequest_RpcRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RotomProtos.MitmRequest.RpcRequest)
}
PROTOBUF_NDEBUG_INLINE MitmRequest_RpcRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::RotomProtos::MitmRequest_RpcRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        #ifdef PROTOBUF_INTERNAL_REMOVE_ARENA_PTRS_REPEATED_PTR_FIELD
        request_{visibility, ::_pbi::InternalMetadataOffset::Build<
            ::RotomProtos::MitmRequest_RpcRequest,
            PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmRequest_RpcRequest, _impl_.request_)>()
        , from.request_}
        #else
        request_ { visibility, arena, from.request_ }
        #endif
     {}

MitmRequest_RpcRequest::MitmRequest_RpcRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const MitmRequest_RpcRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MitmRequest_RpcRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MitmRequest_RpcRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char*>(&_impl_) +
               offsetof(Impl_, lat_),
           reinterpret_cast<const char*>(&from._impl_) +
               offsetof(Impl_, lat_),
           offsetof(Impl_, lon_) -
               offsetof(Impl_, lat_) +
               sizeof(Impl_::lon_));

  // @@protoc_insertion_point(copy_constructor:RotomProtos.MitmRequest.RpcRequest)
}
PROTOBUF_NDEBUG_INLINE MitmRequest_RpcRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        #ifdef PROTOBUF_INTERNAL_REMOVE_ARENA_PTRS_REPEATED_PTR_FIELD
        request_{visibility, ::_pbi::InternalMetadataOffset::Build<
            ::RotomProtos::MitmRequest_RpcRequest,
            PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmRequest_RpcRequest, _impl_.request_)>()
        }
        #else
        request_ { visibility, arena }
        #endif
     {}

inline void MitmRequest_RpcRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char*>(&_impl_) +
               offsetof(Impl_, lat_),
           0,
           offsetof(Impl_, lon_) -
               offsetof(Impl_, lat_) +
               sizeof(Impl_::lon_));
}
MitmRequest_RpcRequest::~MitmRequest_RpcRequest() {
  // @@protoc_insertion_point(destructor:RotomProtos.MitmRequest.RpcRequest)
  SharedDtor(*this);
}
inline void MitmRequest_RpcRequest::SharedDtor(MessageLite& self) {
  MitmRequest_RpcRequest& this_ = static_cast<MitmRequest_RpcRequest&>(self);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL MitmRequest_RpcRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MitmRequest_RpcRequest(arena);
}
#ifdef PROTOBUF_INTERNAL_REMOVE_ARENA_PTRS_REPEATED_PTR_FIELD
constexpr auto MitmRequest_RpcRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MitmRequest_RpcRequest),
                                            alignof(MitmRequest_RpcRequest));
}
#else  // !PROTOBUF_INTERNAL_REMOVE_ARENA_PTRS_REPEATED_PTR_FIELD
constexpr auto MitmRequest_RpcRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(MitmRequest_RpcRequest, _impl_.request_) +
          decltype(MitmRequest_RpcRequest::_impl_.request_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(MitmRequest_RpcRequest), alignof(MitmRequest_RpcRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&MitmRequest_RpcRequest::PlacementNew_,
                                 sizeof(MitmRequest_RpcRequest),
                                 alignof(MitmRequest_RpcRequest));
  }
}
#endif
constexpr auto MitmRequest_RpcRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MitmRequest_RpcRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MitmRequest_RpcRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MitmRequest_RpcRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MitmRequest_RpcRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<MitmRequest_RpcRequest>(), &MitmRequest_RpcRequest::ByteSizeLong,
              &MitmRequest_RpcRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MitmRequest_RpcRequest, _impl_._cached_size_),
          false,
      },
      &MitmRequest_RpcRequest::kDescriptorMethods,
      &descriptor_table_rotom_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull MitmRequest_RpcRequest_class_data_ =
        MitmRequest_RpcRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
MitmRequest_RpcRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MitmRequest_RpcRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MitmRequest_RpcRequest_class_data_.tc_table);
  return MitmRequest_RpcRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2>
MitmRequest_RpcRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MitmRequest_RpcRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    MitmRequest_RpcRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RotomProtos::MitmRequest_RpcRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .RotomProtos.MitmRequest.RpcRequest.SingleRpcRequest request = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 0, 0,
      PROTOBUF_FIELD_OFFSET(MitmRequest_RpcRequest, _impl_.request_)}},
    // double lat = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0,
      PROTOBUF_FIELD_OFFSET(MitmRequest_RpcRequest, _impl_.lat_)}},
    // double lon = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 2, 0,
      PROTOBUF_FIELD_OFFSET(MitmRequest_RpcRequest, _impl_.lon_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .RotomProtos.MitmRequest.RpcRequest.SingleRpcRequest request = 1;
    {PROTOBUF_FIELD_OFFSET(MitmRequest_RpcRequest, _impl_.request_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // double lat = 2;
    {PROTOBUF_FIELD_OFFSET(MitmRequest_RpcRequest, _impl_.lat_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double lon = 3;
    {PROTOBUF_FIELD_OFFSET(MitmRequest_RpcRequest, _impl_.lon_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::RotomProtos::MitmRequest_RpcRequest_SingleRpcRequest>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void MitmRequest_RpcRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:RotomProtos.MitmRequest.RpcRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (CheckHasBitForRepeated(cached_has_bits, 0x00000001U)) {
    _impl_.request_.Clear();
  }
  if (BatchCheckHasBit(cached_has_bits, 0x00000006U)) {
    ::memset(&_impl_.lat_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.lon_) -
        reinterpret_cast<char*>(&_impl_.lat_)) + sizeof(_impl_.lon_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL MitmRequest_RpcRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const MitmRequest_RpcRequest& this_ = static_cast<const MitmRequest_RpcRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL MitmRequest_RpcRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const MitmRequest_RpcRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:RotomProtos.MitmRequest.RpcRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // repeated .RotomProtos.MitmRequest.RpcRequest.SingleRpcRequest request = 1;
  if (CheckHasBitForRepeated(cached_has_bits, 0x00000001U)) {
    for (unsigned i = 0, n = static_cast<unsigned>(
                             this_._internal_request_size());
         i < n; i++) {
      const auto& repfield = this_._internal_request().Get(i);
      target =
          ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
              1, repfield, repfield.GetCachedSize(),
              target, stream);
    }
  }

  // double lat = 2;
  if (CheckHasBit(cached_has_bits, 0x00000002U)) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_lat()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this_._internal_lat(), target);
    }
  }

  // double lon = 3;
  if (CheckHasBit(cached_has_bits, 0x00000004U)) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_lon()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this_._internal_lon(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RotomProtos.MitmRequest.RpcRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t MitmRequest_RpcRequest::ByteSizeLong(const MessageLite& base) {
  const MitmRequest_RpcRequest& this_ = static_cast<const MitmRequest_RpcRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t MitmRequest_RpcRequest::ByteSizeLong() const {
  const MitmRequest_RpcRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:RotomProtos.MitmRequest.RpcRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000007U)) {
    // repeated .RotomProtos.MitmRequest.RpcRequest.SingleRpcRequest request = 1;
    if (CheckHasBitForRepeated(cached_has_bits, 0x00000001U)) {
      total_size += 1UL * this_._internal_request_size();
      for (const auto& msg : this_._internal_request()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // double lat = 2;
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_lat()) != 0) {
        total_size += 9;
      }
    }
    // double lon = 3;
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_lon()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void MitmRequest_RpcRequest::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg) {
   auto* const _this =
      static_cast<MitmRequest_RpcRequest*>(&to_msg);
  auto& from = static_cast<const MitmRequest_RpcRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    from.CheckHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:RotomProtos.MitmRequest.RpcRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000007U)) {
    if (CheckHasBitForRepeated(cached_has_bits, 0x00000001U)) {
      _this->_internal_mutable_request()->InternalMergeFromWithArena(
          ::google::protobuf::MessageLite::internal_visibility(), arena,
          from._internal_request());
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (::absl::bit_cast<::uint64_t>(from._internal_lat()) != 0) {
        _this->_impl_.lat_ = from._impl_.lat_;
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      if (::absl::bit_cast<::uint64_t>(from._internal_lon()) != 0) {
        _this->_impl_.lon_ = from._impl_.lon_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void MitmRequest_RpcRequest::CopyFrom(const MitmRequest_RpcRequest& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:RotomProtos.MitmRequest.RpcRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MitmRequest_RpcRequest::InternalSwap(MitmRequest_RpcRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.request_.InternalSwap(&other->_impl_.request_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MitmRequest_RpcRequest, _impl_.lon_)
      + sizeof(MitmRequest_RpcRequest::_impl_.lon_)
      - PROTOBUF_FIELD_OFFSET(MitmRequest_RpcRequest, _impl_.lat_)>(
          reinterpret_cast<char*>(&_impl_.lat_),
          reinterpret_cast<char*>(&other->_impl_.lat_));
}

::google::protobuf::Metadata MitmRequest_RpcRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MitmRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<MitmRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MitmRequest, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmRequest, _impl_._oneof_case_);
};

void MitmRequest::set_allocated_login_request(::RotomProtos::MitmRequest_LoginRequest* PROTOBUF_NULLABLE login_request) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (login_request) {
    ::google::protobuf::Arena* submessage_arena = login_request->GetArena();
    if (message_arena != submessage_arena) {
      login_request = ::google::protobuf::internal::GetOwnedMessage(message_arena, login_request, submessage_arena);
    }
    set_has_login_request();
    _impl_.payload_.login_request_ = login_request;
  }
  // @@protoc_insertion_point(field_set_allocated:RotomProtos.MitmRequest.login_request)
}
void MitmRequest::set_allocated_rpc_request(::RotomProtos::MitmRequest_RpcRequest* PROTOBUF_NULLABLE rpc_request) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (rpc_request) {
    ::google::protobuf::Arena* submessage_arena = rpc_request->GetArena();
    if (message_arena != submessage_arena) {
      rpc_request = ::google::protobuf::internal::GetOwnedMessage(message_arena, rpc_request, submessage_arena);
    }
    set_has_rpc_request();
    _impl_.payload_.rpc_request_ = rpc_request;
  }
  // @@protoc_insertion_point(field_set_allocated:RotomProtos.MitmRequest.rpc_request)
}
MitmRequest::MitmRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MitmRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RotomProtos.MitmRequest)
}
PROTOBUF_NDEBUG_INLINE MitmRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::RotomProtos::MitmRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        payload_{},
        _oneof_case_{from._oneof_case_[0]} {}

MitmRequest::MitmRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const MitmRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MitmRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MitmRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char*>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char*>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, method_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::method_));
  switch (payload_case()) {
    case PAYLOAD_NOT_SET:
      break;
      case kLoginRequest:
        _impl_.payload_.login_request_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.login_request_);
        break;
      case kRpcRequest:
        _impl_.payload_.rpc_request_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.rpc_request_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:RotomProtos.MitmRequest)
}
PROTOBUF_NDEBUG_INLINE MitmRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        payload_{},
        _oneof_case_{} {}

inline void MitmRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char*>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, method_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::method_));
}
MitmRequest::~MitmRequest() {
  // @@protoc_insertion_point(destructor:RotomProtos.MitmRequest)
  SharedDtor(*this);
}
inline void MitmRequest::SharedDtor(MessageLite& self) {
  MitmRequest& this_ = static_cast<MitmRequest&>(self);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_payload()) {
    this_.clear_payload();
  }
  this_._impl_.~Impl_();
}

void MitmRequest::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:RotomProtos.MitmRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (payload_case()) {
    case kLoginRequest: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.login_request_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.login_request_);
      }
      break;
    }
    case kRpcRequest: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.rpc_request_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.rpc_request_);
      }
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}


inline void* PROTOBUF_NONNULL MitmRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MitmRequest(arena);
}
constexpr auto MitmRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(MitmRequest),
                                            alignof(MitmRequest));
}
constexpr auto MitmRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MitmRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MitmRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MitmRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MitmRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<MitmRequest>(), &MitmRequest::ByteSizeLong,
              &MitmRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MitmRequest, _impl_._cached_size_),
          false,
      },
      &MitmRequest::kDescriptorMethods,
      &descriptor_table_rotom_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull MitmRequest_class_data_ =
        MitmRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
MitmRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MitmRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MitmRequest_class_data_.tc_table);
  return MitmRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 4, 2, 0, 2>
MitmRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MitmRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    MitmRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RotomProtos::MitmRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .RotomProtos.MitmRequest.Method method = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MitmRequest, _impl_.method_), 1>(),
     {16, 1, 0,
      PROTOBUF_FIELD_OFFSET(MitmRequest, _impl_.method_)}},
    // uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MitmRequest, _impl_.id_), 0>(),
     {8, 0, 0,
      PROTOBUF_FIELD_OFFSET(MitmRequest, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(MitmRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // .RotomProtos.MitmRequest.Method method = 2;
    {PROTOBUF_FIELD_OFFSET(MitmRequest, _impl_.method_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .RotomProtos.MitmRequest.LoginRequest login_request = 3;
    {PROTOBUF_FIELD_OFFSET(MitmRequest, _impl_.payload_.login_request_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .RotomProtos.MitmRequest.RpcRequest rpc_request = 4;
    {PROTOBUF_FIELD_OFFSET(MitmRequest, _impl_.payload_.rpc_request_), _Internal::kOneofCaseOffset + 0, 1, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::RotomProtos::MitmRequest_LoginRequest>()},
      {::_pbi::TcParser::GetTable<::RotomProtos::MitmRequest_RpcRequest>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void MitmRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:RotomProtos.MitmRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    ::memset(&_impl_.id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.method_) -
        reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.method_));
  }
  clear_payload();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL MitmRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const MitmRequest& this_ = static_cast<const MitmRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL MitmRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const MitmRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:RotomProtos.MitmRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // uint32 id = 1;
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    if (this_._internal_id() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_id(), target);
    }
  }

  // .RotomProtos.MitmRequest.Method method = 2;
  if (CheckHasBit(cached_has_bits, 0x00000002U)) {
    if (this_._internal_method() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this_._internal_method(), target);
    }
  }

  switch (this_.payload_case()) {
    case kLoginRequest: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *this_._impl_.payload_.login_request_, this_._impl_.payload_.login_request_->GetCachedSize(), target,
          stream);
      break;
    }
    case kRpcRequest: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, *this_._impl_.payload_.rpc_request_, this_._impl_.payload_.rpc_request_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RotomProtos.MitmRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t MitmRequest::ByteSizeLong(const MessageLite& base) {
  const MitmRequest& this_ = static_cast<const MitmRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t MitmRequest::ByteSizeLong() const {
  const MitmRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:RotomProtos.MitmRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    // uint32 id = 1;
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (this_._internal_id() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_id());
      }
    }
    // .RotomProtos.MitmRequest.Method method = 2;
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (this_._internal_method() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_method());
      }
    }
  }
  switch (this_.payload_case()) {
    // .RotomProtos.MitmRequest.LoginRequest login_request = 3;
    case kLoginRequest: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.login_request_);
      break;
    }
    // .RotomProtos.MitmRequest.RpcRequest rpc_request = 4;
    case kRpcRequest: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.rpc_request_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void MitmRequest::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg) {
   auto* const _this =
      static_cast<MitmRequest*>(&to_msg);
  auto& from = static_cast<const MitmRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    from.CheckHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:RotomProtos.MitmRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (from._internal_id() != 0) {
        _this->_impl_.id_ = from._impl_.id_;
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (from._internal_method() != 0) {
        _this->_impl_.method_ = from._impl_.method_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case =
          from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_payload();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kLoginRequest: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.login_request_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.login_request_);
        } else {
          _this->_impl_.payload_.login_request_->MergeFrom(*from._impl_.payload_.login_request_);
        }
        break;
      }
      case kRpcRequest: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.rpc_request_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.rpc_request_);
        } else {
          _this->_impl_.payload_.rpc_request_->MergeFrom(*from._impl_.payload_.rpc_request_);
        }
        break;
      }
      case PAYLOAD_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void MitmRequest::CopyFrom(const MitmRequest& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:RotomProtos.MitmRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MitmRequest::InternalSwap(MitmRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MitmRequest, _impl_.method_)
      + sizeof(MitmRequest::_impl_.method_)
      - PROTOBUF_FIELD_OFFSET(MitmRequest, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
  swap(_impl_.payload_, other->_impl_.payload_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata MitmRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MitmResponse_LoginResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<MitmResponse_LoginResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MitmResponse_LoginResponse, _impl_._has_bits_);
};

MitmResponse_LoginResponse::MitmResponse_LoginResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MitmResponse_LoginResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RotomProtos.MitmResponse.LoginResponse)
}
PROTOBUF_NDEBUG_INLINE MitmResponse_LoginResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::RotomProtos::MitmResponse_LoginResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        worker_id_(arena, from.worker_id_),
        useragent_(arena, from.useragent_) {}

MitmResponse_LoginResponse::MitmResponse_LoginResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const MitmResponse_LoginResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MitmResponse_LoginResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MitmResponse_LoginResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char*>(&_impl_) +
               offsetof(Impl_, status_),
           reinterpret_cast<const char*>(&from._impl_) +
               offsetof(Impl_, status_),
           offsetof(Impl_, supports_compression_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::supports_compression_));

  // @@protoc_insertion_point(copy_constructor:RotomProtos.MitmResponse.LoginResponse)
}
PROTOBUF_NDEBUG_INLINE MitmResponse_LoginResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        worker_id_(arena),
        useragent_(arena) {}

inline void MitmResponse_LoginResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char*>(&_impl_) +
               offsetof(Impl_, status_),
           0,
           offsetof(Impl_, supports_compression_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::supports_compression_));
}
MitmResponse_LoginResponse::~MitmResponse_LoginResponse() {
  // @@protoc_insertion_point(destructor:RotomProtos.MitmResponse.LoginResponse)
  SharedDtor(*this);
}
inline void MitmResponse_LoginResponse::SharedDtor(MessageLite& self) {
  MitmResponse_LoginResponse& this_ = static_cast<MitmResponse_LoginResponse&>(self);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.worker_id_.Destroy();
  this_._impl_.useragent_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL MitmResponse_LoginResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MitmResponse_LoginResponse(arena);
}
constexpr auto MitmResponse_LoginResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MitmResponse_LoginResponse),
                                            alignof(MitmResponse_LoginResponse));
}
constexpr auto MitmResponse_LoginResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MitmResponse_LoginResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MitmResponse_LoginResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MitmResponse_LoginResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MitmResponse_LoginResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<MitmResponse_LoginResponse>(), &MitmResponse_LoginResponse::ByteSizeLong,
              &MitmResponse_LoginResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MitmResponse_LoginResponse, _impl_._cached_size_),
          false,
      },
      &MitmResponse_LoginResponse::kDescriptorMethods,
      &descriptor_table_rotom_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull MitmResponse_LoginResponse_class_data_ =
        MitmResponse_LoginResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
MitmResponse_LoginResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MitmResponse_LoginResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MitmResponse_LoginResponse_class_data_.tc_table);
  return MitmResponse_LoginResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 65, 2>
MitmResponse_LoginResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MitmResponse_LoginResponse, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    MitmResponse_LoginResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RotomProtos::MitmResponse_LoginResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string useragent = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 1, 0,
      PROTOBUF_FIELD_OFFSET(MitmResponse_LoginResponse, _impl_.useragent_)}},
    // string worker_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0,
      PROTOBUF_FIELD_OFFSET(MitmResponse_LoginResponse, _impl_.worker_id_)}},
    // .RotomProtos.AuthStatus status = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MitmResponse_LoginResponse, _impl_.status_), 2>(),
     {16, 2, 0,
      PROTOBUF_FIELD_OFFSET(MitmResponse_LoginResponse, _impl_.status_)}},
    // bool supports_compression = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(MitmResponse_LoginResponse, _impl_.supports_compression_), 3>(),
     {24, 3, 0,
      PROTOBUF_FIELD_OFFSET(MitmResponse_LoginResponse, _impl_.supports_compression_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string worker_id = 1;
    {PROTOBUF_FIELD_OFFSET(MitmResponse_LoginResponse, _impl_.worker_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .RotomProtos.AuthStatus status = 2;
    {PROTOBUF_FIELD_OFFSET(MitmResponse_LoginResponse, _impl_.status_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // bool supports_compression = 3;
    {PROTOBUF_FIELD_OFFSET(MitmResponse_LoginResponse, _impl_.supports_compression_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // string useragent = 4;
    {PROTOBUF_FIELD_OFFSET(MitmResponse_LoginResponse, _impl_.useragent_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\46\11\0\0\11\0\0\0"
    "RotomProtos.MitmResponse.LoginResponse"
    "worker_id"
    "useragent"
  }},
};
PROTOBUF_NOINLINE void MitmResponse_LoginResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:RotomProtos.MitmResponse.LoginResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      _impl_.worker_id_.ClearNonDefaultToEmpty();
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      _impl_.useragent_.ClearNonDefaultToEmpty();
    }
  }
  if (BatchCheckHasBit(cached_has_bits, 0x0000000cU)) {
    ::memset(&_impl_.status_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.supports_compression_) -
        reinterpret_cast<char*>(&_impl_.status_)) + sizeof(_impl_.supports_compression_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL MitmResponse_LoginResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const MitmResponse_LoginResponse& this_ = static_cast<const MitmResponse_LoginResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL MitmResponse_LoginResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const MitmResponse_LoginResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:RotomProtos.MitmResponse.LoginResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // string worker_id = 1;
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    if (!this_._internal_worker_id().empty()) {
      const ::std::string& _s = this_._internal_worker_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "RotomProtos.MitmResponse.LoginResponse.worker_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // .RotomProtos.AuthStatus status = 2;
  if (CheckHasBit(cached_has_bits, 0x00000004U)) {
    if (this_._internal_status() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this_._internal_status(), target);
    }
  }

  // bool supports_compression = 3;
  if (CheckHasBit(cached_has_bits, 0x00000008U)) {
    if (this_._internal_supports_compression() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_supports_compression(), target);
    }
  }

  // string useragent = 4;
  if (CheckHasBit(cached_has_bits, 0x00000002U)) {
    if (!this_._internal_useragent().empty()) {
      const ::std::string& _s = this_._internal_useragent();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "RotomProtos.MitmResponse.LoginResponse.useragent");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RotomProtos.MitmResponse.LoginResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t MitmResponse_LoginResponse::ByteSizeLong(const MessageLite& base) {
  const MitmResponse_LoginResponse& this_ = static_cast<const MitmResponse_LoginResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t MitmResponse_LoginResponse::ByteSizeLong() const {
  const MitmResponse_LoginResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:RotomProtos.MitmResponse.LoginResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x0000000fU)) {
    // string worker_id = 1;
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!this_._internal_worker_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_worker_id());
      }
    }
    // string useragent = 4;
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (!this_._internal_useragent().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_useragent());
      }
    }
    // .RotomProtos.AuthStatus status = 2;
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      if (this_._internal_status() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
      }
    }
    // bool supports_compression = 3;
    if (CheckHasBit(cached_has_bits, 0x00000008U)) {
      if (this_._internal_supports_compression() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void MitmResponse_LoginResponse::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg) {
   auto* const _this =
      static_cast<MitmResponse_LoginResponse*>(&to_msg);
  auto& from = static_cast<const MitmResponse_LoginResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    from.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:RotomProtos.MitmResponse.LoginResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x0000000fU)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!from._internal_worker_id().empty()) {
        _this->_internal_set_worker_id(from._internal_worker_id());
      } else {
        if (_this->_impl_.worker_id_.IsDefault()) {
          _this->_internal_set_worker_id("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (!from._internal_useragent().empty()) {
        _this->_internal_set_useragent(from._internal_useragent());
      } else {
        if (_this->_impl_.useragent_.IsDefault()) {
          _this->_internal_set_useragent("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      if (from._internal_status() != 0) {
        _this->_impl_.status_ = from._impl_.status_;
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000008U)) {
      if (from._internal_supports_compression() != 0) {
        _this->_impl_.supports_compression_ = from._impl_.supports_compression_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void MitmResponse_LoginResponse::CopyFrom(const MitmResponse_LoginResponse& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:RotomProtos.MitmResponse.LoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MitmResponse_LoginResponse::InternalSwap(MitmResponse_LoginResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.worker_id_, &other->_impl_.worker_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.useragent_, &other->_impl_.useragent_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MitmResponse_LoginResponse, _impl_.supports_compression_)
      + sizeof(MitmResponse_LoginResponse::_impl_.supports_compression_)
      - PROTOBUF_FIELD_OFFSET(MitmResponse_LoginResponse, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::google::protobuf::Metadata MitmResponse_LoginResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MitmResponse_RpcResponse_SingleRpcResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<MitmResponse_RpcResponse_SingleRpcResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MitmResponse_RpcResponse_SingleRpcResponse, _impl_._has_bits_);
};

MitmResponse_RpcResponse_SingleRpcResponse::MitmResponse_RpcResponse_SingleRpcResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MitmResponse_RpcResponse_SingleRpcResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RotomProtos.MitmResponse.RpcResponse.SingleRpcResponse)
}
PROTOBUF_NDEBUG_INLINE MitmResponse_RpcResponse_SingleRpcResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::RotomProtos::MitmResponse_RpcResponse_SingleRpcResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        payload_(arena, from.payload_) {}

MitmResponse_RpcResponse_SingleRpcResponse::MitmResponse_RpcResponse_SingleRpcResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const MitmResponse_RpcResponse_SingleRpcResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MitmResponse_RpcResponse_SingleRpcResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MitmResponse_RpcResponse_SingleRpcResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char*>(&_impl_) +
               offsetof(Impl_, method_),
           reinterpret_cast<const char*>(&from._impl_) +
               offsetof(Impl_, method_),
           offsetof(Impl_, is_compressed_) -
               offsetof(Impl_, method_) +
               sizeof(Impl_::is_compressed_));

  // @@protoc_insertion_point(copy_constructor:RotomProtos.MitmResponse.RpcResponse.SingleRpcResponse)
}
PROTOBUF_NDEBUG_INLINE MitmResponse_RpcResponse_SingleRpcResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        payload_(arena) {}

inline void MitmResponse_RpcResponse_SingleRpcResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char*>(&_impl_) +
               offsetof(Impl_, method_),
           0,
           offsetof(Impl_, is_compressed_) -
               offsetof(Impl_, method_) +
               sizeof(Impl_::is_compressed_));
}
MitmResponse_RpcResponse_SingleRpcResponse::~MitmResponse_RpcResponse_SingleRpcResponse() {
  // @@protoc_insertion_point(destructor:RotomProtos.MitmResponse.RpcResponse.SingleRpcResponse)
  SharedDtor(*this);
}
inline void MitmResponse_RpcResponse_SingleRpcResponse::SharedDtor(MessageLite& self) {
  MitmResponse_RpcResponse_SingleRpcResponse& this_ = static_cast<MitmResponse_RpcResponse_SingleRpcResponse&>(self);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.payload_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL MitmResponse_RpcResponse_SingleRpcResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MitmResponse_RpcResponse_SingleRpcResponse(arena);
}
constexpr auto MitmResponse_RpcResponse_SingleRpcResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MitmResponse_RpcResponse_SingleRpcResponse),
                                            alignof(MitmResponse_RpcResponse_SingleRpcResponse));
}
constexpr auto MitmResponse_RpcResponse_SingleRpcResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MitmResponse_RpcResponse_SingleRpcResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MitmResponse_RpcResponse_SingleRpcResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MitmResponse_RpcResponse_SingleRpcResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MitmResponse_RpcResponse_SingleRpcResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<MitmResponse_RpcResponse_SingleRpcResponse>(), &MitmResponse_RpcResponse_SingleRpcResponse::ByteSizeLong,
              &MitmResponse_RpcResponse_SingleRpcResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MitmResponse_RpcResponse_SingleRpcResponse, _impl_._cached_size_),
          false,
      },
      &MitmResponse_RpcResponse_SingleRpcResponse::kDescriptorMethods,
      &descriptor_table_rotom_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull MitmResponse_RpcResponse_SingleRpcResponse_class_data_ =
        MitmResponse_RpcResponse_SingleRpcResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
MitmResponse_RpcResponse_SingleRpcResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MitmResponse_RpcResponse_SingleRpcResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MitmResponse_RpcResponse_SingleRpcResponse_class_data_.tc_table);
  return MitmResponse_RpcResponse_SingleRpcResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
MitmResponse_RpcResponse_SingleRpcResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MitmResponse_RpcResponse_SingleRpcResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    MitmResponse_RpcResponse_SingleRpcResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RotomProtos::MitmResponse_RpcResponse_SingleRpcResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 method = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MitmResponse_RpcResponse_SingleRpcResponse, _impl_.method_), 1>(),
     {8, 1, 0,
      PROTOBUF_FIELD_OFFSET(MitmResponse_RpcResponse_SingleRpcResponse, _impl_.method_)}},
    // bytes payload = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 0, 0,
      PROTOBUF_FIELD_OFFSET(MitmResponse_RpcResponse_SingleRpcResponse, _impl_.payload_)}},
    // bool is_compressed = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(MitmResponse_RpcResponse_SingleRpcResponse, _impl_.is_compressed_), 2>(),
     {24, 2, 0,
      PROTOBUF_FIELD_OFFSET(MitmResponse_RpcResponse_SingleRpcResponse, _impl_.is_compressed_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 method = 1;
    {PROTOBUF_FIELD_OFFSET(MitmResponse_RpcResponse_SingleRpcResponse, _impl_.method_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // bytes payload = 2;
    {PROTOBUF_FIELD_OFFSET(MitmResponse_RpcResponse_SingleRpcResponse, _impl_.payload_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // bool is_compressed = 3;
    {PROTOBUF_FIELD_OFFSET(MitmResponse_RpcResponse_SingleRpcResponse, _impl_.is_compressed_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void MitmResponse_RpcResponse_SingleRpcResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:RotomProtos.MitmResponse.RpcResponse.SingleRpcResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    _impl_.payload_.ClearNonDefaultToEmpty();
  }
  if (BatchCheckHasBit(cached_has_bits, 0x00000006U)) {
    ::memset(&_impl_.method_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.is_compressed_) -
        reinterpret_cast<char*>(&_impl_.method_)) + sizeof(_impl_.is_compressed_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL MitmResponse_RpcResponse_SingleRpcResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const MitmResponse_RpcResponse_SingleRpcResponse& this_ = static_cast<const MitmResponse_RpcResponse_SingleRpcResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL MitmResponse_RpcResponse_SingleRpcResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const MitmResponse_RpcResponse_SingleRpcResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:RotomProtos.MitmResponse.RpcResponse.SingleRpcResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // int32 method = 1;
  if (CheckHasBit(cached_has_bits, 0x00000002U)) {
    if (this_._internal_method() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_method(), target);
    }
  }

  // bytes payload = 2;
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    if (!this_._internal_payload().empty()) {
      const ::std::string& _s = this_._internal_payload();
      target = stream->WriteBytesMaybeAliased(2, _s, target);
    }
  }

  // bool is_compressed = 3;
  if (CheckHasBit(cached_has_bits, 0x00000004U)) {
    if (this_._internal_is_compressed() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_is_compressed(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RotomProtos.MitmResponse.RpcResponse.SingleRpcResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t MitmResponse_RpcResponse_SingleRpcResponse::ByteSizeLong(const MessageLite& base) {
  const MitmResponse_RpcResponse_SingleRpcResponse& this_ = static_cast<const MitmResponse_RpcResponse_SingleRpcResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t MitmResponse_RpcResponse_SingleRpcResponse::ByteSizeLong() const {
  const MitmResponse_RpcResponse_SingleRpcResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:RotomProtos.MitmResponse.RpcResponse.SingleRpcResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000007U)) {
    // bytes payload = 2;
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!this_._internal_payload().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_payload());
      }
    }
    // int32 method = 1;
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (this_._internal_method() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_method());
      }
    }
    // bool is_compressed = 3;
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      if (this_._internal_is_compressed() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void MitmResponse_RpcResponse_SingleRpcResponse::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg) {
   auto* const _this =
      static_cast<MitmResponse_RpcResponse_SingleRpcResponse*>(&to_msg);
  auto& from = static_cast<const MitmResponse_RpcResponse_SingleRpcResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    from.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:RotomProtos.MitmResponse.RpcResponse.SingleRpcResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000007U)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!from._internal_payload().empty()) {
        _this->_internal_set_payload(from._internal_payload());
      } else {
        if (_this->_impl_.payload_.IsDefault()) {
          _this->_internal_set_payload("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (from._internal_method() != 0) {
        _this->_impl_.method_ = from._impl_.method_;
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      if (from._internal_is_compressed() != 0) {
        _this->_impl_.is_compressed_ = from._impl_.is_compressed_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void MitmResponse_RpcResponse_SingleRpcResponse::CopyFrom(const MitmResponse_RpcResponse_SingleRpcResponse& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:RotomProtos.MitmResponse.RpcResponse.SingleRpcResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MitmResponse_RpcResponse_SingleRpcResponse::InternalSwap(MitmResponse_RpcResponse_SingleRpcResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.payload_, &other->_impl_.payload_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MitmResponse_RpcResponse_SingleRpcResponse, _impl_.is_compressed_)
      + sizeof(MitmResponse_RpcResponse_SingleRpcResponse::_impl_.is_compressed_)
      - PROTOBUF_FIELD_OFFSET(MitmResponse_RpcResponse_SingleRpcResponse, _impl_.method_)>(
          reinterpret_cast<char*>(&_impl_.method_),
          reinterpret_cast<char*>(&other->_impl_.method_));
}

::google::protobuf::Metadata MitmResponse_RpcResponse_SingleRpcResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MitmResponse_RpcResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<MitmResponse_RpcResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MitmResponse_RpcResponse, _impl_._has_bits_);
};

MitmResponse_RpcResponse::MitmResponse_RpcResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MitmResponse_RpcResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RotomProtos.MitmResponse.RpcResponse)
}
PROTOBUF_NDEBUG_INLINE MitmResponse_RpcResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::RotomProtos::MitmResponse_RpcResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        #ifdef PROTOBUF_INTERNAL_REMOVE_ARENA_PTRS_REPEATED_PTR_FIELD
        response_{visibility, ::_pbi::InternalMetadataOffset::Build<
            ::RotomProtos::MitmResponse_RpcResponse,
            PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmResponse_RpcResponse, _impl_.response_)>()
        , from.response_}
        #else
        response_ { visibility, arena, from.response_ }
        #endif
     {}

MitmResponse_RpcResponse::MitmResponse_RpcResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const MitmResponse_RpcResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MitmResponse_RpcResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MitmResponse_RpcResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.rpc_status_ = from._impl_.rpc_status_;

  // @@protoc_insertion_point(copy_constructor:RotomProtos.MitmResponse.RpcResponse)
}
PROTOBUF_NDEBUG_INLINE MitmResponse_RpcResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        #ifdef PROTOBUF_INTERNAL_REMOVE_ARENA_PTRS_REPEATED_PTR_FIELD
        response_{visibility, ::_pbi::InternalMetadataOffset::Build<
            ::RotomProtos::MitmResponse_RpcResponse,
            PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmResponse_RpcResponse, _impl_.response_)>()
        }
        #else
        response_ { visibility, arena }
        #endif
     {}

inline void MitmResponse_RpcResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.rpc_status_ = {};
}
MitmResponse_RpcResponse::~MitmResponse_RpcResponse() {
  // @@protoc_insertion_point(destructor:RotomProtos.MitmResponse.RpcResponse)
  SharedDtor(*this);
}
inline void MitmResponse_RpcResponse::SharedDtor(MessageLite& self) {
  MitmResponse_RpcResponse& this_ = static_cast<MitmResponse_RpcResponse&>(self);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL MitmResponse_RpcResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MitmResponse_RpcResponse(arena);
}
#ifdef PROTOBUF_INTERNAL_REMOVE_ARENA_PTRS_REPEATED_PTR_FIELD
constexpr auto MitmResponse_RpcResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MitmResponse_RpcResponse),
                                            alignof(MitmResponse_RpcResponse));
}
#else  // !PROTOBUF_INTERNAL_REMOVE_ARENA_PTRS_REPEATED_PTR_FIELD
constexpr auto MitmResponse_RpcResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(MitmResponse_RpcResponse, _impl_.response_) +
          decltype(MitmResponse_RpcResponse::_impl_.response_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(MitmResponse_RpcResponse), alignof(MitmResponse_RpcResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&MitmResponse_RpcResponse::PlacementNew_,
                                 sizeof(MitmResponse_RpcResponse),
                                 alignof(MitmResponse_RpcResponse));
  }
}
#endif
constexpr auto MitmResponse_RpcResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MitmResponse_RpcResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MitmResponse_RpcResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MitmResponse_RpcResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MitmResponse_RpcResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<MitmResponse_RpcResponse>(), &MitmResponse_RpcResponse::ByteSizeLong,
              &MitmResponse_RpcResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MitmResponse_RpcResponse, _impl_._cached_size_),
          false,
      },
      &MitmResponse_RpcResponse::kDescriptorMethods,
      &descriptor_table_rotom_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull MitmResponse_RpcResponse_class_data_ =
        MitmResponse_RpcResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
MitmResponse_RpcResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MitmResponse_RpcResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MitmResponse_RpcResponse_class_data_.tc_table);
  return MitmResponse_RpcResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
MitmResponse_RpcResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MitmResponse_RpcResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    MitmResponse_RpcResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RotomProtos::MitmResponse_RpcResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .RotomProtos.MitmResponse.RpcResponse.SingleRpcResponse response = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 0, 0,
      PROTOBUF_FIELD_OFFSET(MitmResponse_RpcResponse, _impl_.response_)}},
    // .RotomProtos.RpcStatus rpc_status = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MitmResponse_RpcResponse, _impl_.rpc_status_), 1>(),
     {8, 1, 0,
      PROTOBUF_FIELD_OFFSET(MitmResponse_RpcResponse, _impl_.rpc_status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .RotomProtos.RpcStatus rpc_status = 1;
    {PROTOBUF_FIELD_OFFSET(MitmResponse_RpcResponse, _impl_.rpc_status_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // repeated .RotomProtos.MitmResponse.RpcResponse.SingleRpcResponse response = 2;
    {PROTOBUF_FIELD_OFFSET(MitmResponse_RpcResponse, _impl_.response_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::RotomProtos::MitmResponse_RpcResponse_SingleRpcResponse>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void MitmResponse_RpcResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:RotomProtos.MitmResponse.RpcResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (CheckHasBitForRepeated(cached_has_bits, 0x00000001U)) {
    _impl_.response_.Clear();
  }
  _impl_.rpc_status_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL MitmResponse_RpcResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const MitmResponse_RpcResponse& this_ = static_cast<const MitmResponse_RpcResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL MitmResponse_RpcResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const MitmResponse_RpcResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:RotomProtos.MitmResponse.RpcResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .RotomProtos.RpcStatus rpc_status = 1;
  if (CheckHasBit(cached_has_bits, 0x00000002U)) {
    if (this_._internal_rpc_status() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_rpc_status(), target);
    }
  }

  // repeated .RotomProtos.MitmResponse.RpcResponse.SingleRpcResponse response = 2;
  if (CheckHasBitForRepeated(cached_has_bits, 0x00000001U)) {
    for (unsigned i = 0, n = static_cast<unsigned>(
                             this_._internal_response_size());
         i < n; i++) {
      const auto& repfield = this_._internal_response().Get(i);
      target =
          ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
              2, repfield, repfield.GetCachedSize(),
              target, stream);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RotomProtos.MitmResponse.RpcResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t MitmResponse_RpcResponse::ByteSizeLong(const MessageLite& base) {
  const MitmResponse_RpcResponse& this_ = static_cast<const MitmResponse_RpcResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t MitmResponse_RpcResponse::ByteSizeLong() const {
  const MitmResponse_RpcResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:RotomProtos.MitmResponse.RpcResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    // repeated .RotomProtos.MitmResponse.RpcResponse.SingleRpcResponse response = 2;
    if (CheckHasBitForRepeated(cached_has_bits, 0x00000001U)) {
      total_size += 1UL * this_._internal_response_size();
      for (const auto& msg : this_._internal_response()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // .RotomProtos.RpcStatus rpc_status = 1;
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (this_._internal_rpc_status() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_rpc_status());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void MitmResponse_RpcResponse::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg) {
   auto* const _this =
      static_cast<MitmResponse_RpcResponse*>(&to_msg);
  auto& from = static_cast<const MitmResponse_RpcResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    from.CheckHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:RotomProtos.MitmResponse.RpcResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000003U)) {
    if (CheckHasBitForRepeated(cached_has_bits, 0x00000001U)) {
      _this->_internal_mutable_response()->InternalMergeFromWithArena(
          ::google::protobuf::MessageLite::internal_visibility(), arena,
          from._internal_response());
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (from._internal_rpc_status() != 0) {
        _this->_impl_.rpc_status_ = from._impl_.rpc_status_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void MitmResponse_RpcResponse::CopyFrom(const MitmResponse_RpcResponse& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:RotomProtos.MitmResponse.RpcResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MitmResponse_RpcResponse::InternalSwap(MitmResponse_RpcResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.response_.InternalSwap(&other->_impl_.response_);
  swap(_impl_.rpc_status_, other->_impl_.rpc_status_);
}

::google::protobuf::Metadata MitmResponse_RpcResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MitmResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<MitmResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MitmResponse, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::RotomProtos::MitmResponse, _impl_._oneof_case_);
};

void MitmResponse::set_allocated_login_response(::RotomProtos::MitmResponse_LoginResponse* PROTOBUF_NULLABLE login_response) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (login_response) {
    ::google::protobuf::Arena* submessage_arena = login_response->GetArena();
    if (message_arena != submessage_arena) {
      login_response = ::google::protobuf::internal::GetOwnedMessage(message_arena, login_response, submessage_arena);
    }
    set_has_login_response();
    _impl_.payload_.login_response_ = login_response;
  }
  // @@protoc_insertion_point(field_set_allocated:RotomProtos.MitmResponse.login_response)
}
void MitmResponse::set_allocated_rpc_response(::RotomProtos::MitmResponse_RpcResponse* PROTOBUF_NULLABLE rpc_response) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (rpc_response) {
    ::google::protobuf::Arena* submessage_arena = rpc_response->GetArena();
    if (message_arena != submessage_arena) {
      rpc_response = ::google::protobuf::internal::GetOwnedMessage(message_arena, rpc_response, submessage_arena);
    }
    set_has_rpc_response();
    _impl_.payload_.rpc_response_ = rpc_response;
  }
  // @@protoc_insertion_point(field_set_allocated:RotomProtos.MitmResponse.rpc_response)
}
MitmResponse::MitmResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MitmResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RotomProtos.MitmResponse)
}
PROTOBUF_NDEBUG_INLINE MitmResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::RotomProtos::MitmResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        mitm_error_(arena, from.mitm_error_),
        payload_{},
        _oneof_case_{from._oneof_case_[0]} {}

MitmResponse::MitmResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const MitmResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MitmResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MitmResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char*>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char*>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, status_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::status_));
  switch (payload_case()) {
    case PAYLOAD_NOT_SET:
      break;
      case kLoginResponse:
        _impl_.payload_.login_response_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.login_response_);
        break;
      case kRpcResponse:
        _impl_.payload_.rpc_response_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.rpc_response_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:RotomProtos.MitmResponse)
}
PROTOBUF_NDEBUG_INLINE MitmResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        mitm_error_(arena),
        payload_{},
        _oneof_case_{} {}

inline void MitmResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char*>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, status_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::status_));
}
MitmResponse::~MitmResponse() {
  // @@protoc_insertion_point(destructor:RotomProtos.MitmResponse)
  SharedDtor(*this);
}
inline void MitmResponse::SharedDtor(MessageLite& self) {
  MitmResponse& this_ = static_cast<MitmResponse&>(self);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.mitm_error_.Destroy();
  if (this_.has_payload()) {
    this_.clear_payload();
  }
  this_._impl_.~Impl_();
}

void MitmResponse::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:RotomProtos.MitmResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (payload_case()) {
    case kLoginResponse: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.login_response_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.login_response_);
      }
      break;
    }
    case kRpcResponse: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.rpc_response_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.rpc_response_);
      }
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}


inline void* PROTOBUF_NONNULL MitmResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MitmResponse(arena);
}
constexpr auto MitmResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MitmResponse),
                                            alignof(MitmResponse));
}
constexpr auto MitmResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MitmResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MitmResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MitmResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MitmResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<MitmResponse>(), &MitmResponse::ByteSizeLong,
              &MitmResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MitmResponse, _impl_._cached_size_),
          false,
      },
      &MitmResponse::kDescriptorMethods,
      &descriptor_table_rotom_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull MitmResponse_class_data_ =
        MitmResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
MitmResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MitmResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MitmResponse_class_data_.tc_table);
  return MitmResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 5, 2, 43, 7>
MitmResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MitmResponse, _impl_._has_bits_),
    0, // no _extensions_
    100, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    MitmResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RotomProtos::MitmResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string mitm_error = 100;
    {::_pbi::TcParser::FastUS2,
     {1698, 0, 0,
      PROTOBUF_FIELD_OFFSET(MitmResponse, _impl_.mitm_error_)}},
    // uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MitmResponse, _impl_.id_), 1>(),
     {8, 1, 0,
      PROTOBUF_FIELD_OFFSET(MitmResponse, _impl_.id_)}},
    // .RotomProtos.MitmResponse.Status status = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MitmResponse, _impl_.status_), 2>(),
     {16, 2, 0,
      PROTOBUF_FIELD_OFFSET(MitmResponse, _impl_.status_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    100, 0, 1,
    65534, 4,
    65535, 65535
  }}, {{
    // uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(MitmResponse, _impl_.id_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // .RotomProtos.MitmResponse.Status status = 2;
    {PROTOBUF_FIELD_OFFSET(MitmResponse, _impl_.status_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .RotomProtos.MitmResponse.LoginResponse login_response = 3;
    {PROTOBUF_FIELD_OFFSET(MitmResponse, _impl_.payload_.login_response_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .RotomProtos.MitmResponse.RpcResponse rpc_response = 4;
    {PROTOBUF_FIELD_OFFSET(MitmResponse, _impl_.payload_.rpc_response_), _Internal::kOneofCaseOffset + 0, 1, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // string mitm_error = 100;
    {PROTOBUF_FIELD_OFFSET(MitmResponse, _impl_.mitm_error_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::RotomProtos::MitmResponse_LoginResponse>()},
      {::_pbi::TcParser::GetTable<::RotomProtos::MitmResponse_RpcResponse>()},
  }},
  {{
    "\30\0\0\0\0\12\0\0"
    "RotomProtos.MitmResponse"
    "mitm_error"
  }},
};
PROTOBUF_NOINLINE void MitmResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:RotomProtos.MitmResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    _impl_.mitm_error_.ClearNonDefaultToEmpty();
  }
  if (BatchCheckHasBit(cached_has_bits, 0x00000006U)) {
    ::memset(&_impl_.id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.status_) -
        reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.status_));
  }
  clear_payload();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL MitmResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const MitmResponse& this_ = static_cast<const MitmResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL MitmResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const MitmResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:RotomProtos.MitmResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // uint32 id = 1;
  if (CheckHasBit(cached_has_bits, 0x00000002U)) {
    if (this_._internal_id() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_id(), target);
    }
  }

  // .RotomProtos.MitmResponse.Status status = 2;
  if (CheckHasBit(cached_has_bits, 0x00000004U)) {
    if (this_._internal_status() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this_._internal_status(), target);
    }
  }

  switch (this_.payload_case()) {
    case kLoginResponse: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *this_._impl_.payload_.login_response_, this_._impl_.payload_.login_response_->GetCachedSize(), target,
          stream);
      break;
    }
    case kRpcResponse: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, *this_._impl_.payload_.rpc_response_, this_._impl_.payload_.rpc_response_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  // string mitm_error = 100;
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    if (!this_._internal_mitm_error().empty()) {
      const ::std::string& _s = this_._internal_mitm_error();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "RotomProtos.MitmResponse.mitm_error");
      target = stream->WriteStringMaybeAliased(100, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RotomProtos.MitmResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t MitmResponse::ByteSizeLong(const MessageLite& base) {
  const MitmResponse& this_ = static_cast<const MitmResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t MitmResponse::ByteSizeLong() const {
  const MitmResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:RotomProtos.MitmResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000007U)) {
    // string mitm_error = 100;
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!this_._internal_mitm_error().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_mitm_error());
      }
    }
    // uint32 id = 1;
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (this_._internal_id() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_id());
      }
    }
    // .RotomProtos.MitmResponse.Status status = 2;
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      if (this_._internal_status() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
      }
    }
  }
  switch (this_.payload_case()) {
    // .RotomProtos.MitmResponse.LoginResponse login_response = 3;
    case kLoginResponse: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.login_response_);
      break;
    }
    // .RotomProtos.MitmResponse.RpcResponse rpc_response = 4;
    case kRpcResponse: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.rpc_response_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void MitmResponse::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg) {
   auto* const _this =
      static_cast<MitmResponse*>(&to_msg);
  auto& from = static_cast<const MitmResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    from.CheckHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:RotomProtos.MitmResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x00000007U)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!from._internal_mitm_error().empty()) {
        _this->_internal_set_mitm_error(from._internal_mitm_error());
      } else {
        if (_this->_impl_.mitm_error_.IsDefault()) {
          _this->_internal_set_mitm_error("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (from._internal_id() != 0) {
        _this->_impl_.id_ = from._impl_.id_;
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      if (from._internal_status() != 0) {
        _this->_impl_.status_ = from._impl_.status_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case =
          from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_payload();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kLoginResponse: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.login_response_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.login_response_);
        } else {
          _this->_impl_.payload_.login_response_->MergeFrom(*from._impl_.payload_.login_response_);
        }
        break;
      }
      case kRpcResponse: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.rpc_response_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.rpc_response_);
        } else {
          _this->_impl_.payload_.rpc_response_->MergeFrom(*from._impl_.payload_.rpc_response_);
        }
        break;
      }
      case PAYLOAD_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void MitmResponse::CopyFrom(const MitmResponse& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:RotomProtos.MitmResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MitmResponse::InternalSwap(MitmResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.mitm_error_, &other->_impl_.mitm_error_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MitmResponse, _impl_.status_)
      + sizeof(MitmResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(MitmResponse, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
  swap(_impl_.payload_, other->_impl_.payload_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata MitmResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class WelcomeMessage::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<WelcomeMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_._has_bits_);
};

WelcomeMessage::WelcomeMessage(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, WelcomeMessage_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RotomProtos.WelcomeMessage)
}
PROTOBUF_NDEBUG_INLINE WelcomeMessage::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::RotomProtos::WelcomeMessage& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        worker_id_(arena, from.worker_id_),
        origin_(arena, from.origin_),
        version_name_(arena, from.version_name_),
        useragent_(arena, from.useragent_),
        device_id_(arena, from.device_id_) {}

WelcomeMessage::WelcomeMessage(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const WelcomeMessage& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, WelcomeMessage_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  WelcomeMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.version_code_ = from._impl_.version_code_;

  // @@protoc_insertion_point(copy_constructor:RotomProtos.WelcomeMessage)
}
PROTOBUF_NDEBUG_INLINE WelcomeMessage::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        worker_id_(arena),
        origin_(arena),
        version_name_(arena),
        useragent_(arena),
        device_id_(arena) {}

inline void WelcomeMessage::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.version_code_ = {};
}
WelcomeMessage::~WelcomeMessage() {
  // @@protoc_insertion_point(destructor:RotomProtos.WelcomeMessage)
  SharedDtor(*this);
}
inline void WelcomeMessage::SharedDtor(MessageLite& self) {
  WelcomeMessage& this_ = static_cast<WelcomeMessage&>(self);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.worker_id_.Destroy();
  this_._impl_.origin_.Destroy();
  this_._impl_.version_name_.Destroy();
  this_._impl_.useragent_.Destroy();
  this_._impl_.device_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL WelcomeMessage::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) WelcomeMessage(arena);
}
constexpr auto WelcomeMessage::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(WelcomeMessage),
                                            alignof(WelcomeMessage));
}
constexpr auto WelcomeMessage::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_WelcomeMessage_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &WelcomeMessage::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<WelcomeMessage>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &WelcomeMessage::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<WelcomeMessage>(), &WelcomeMessage::ByteSizeLong,
              &WelcomeMessage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_._cached_size_),
          false,
      },
      &WelcomeMessage::kDescriptorMethods,
      &descriptor_table_rotom_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull WelcomeMessage_class_data_ =
        WelcomeMessage::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
WelcomeMessage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&WelcomeMessage_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(WelcomeMessage_class_data_.tc_table);
  return WelcomeMessage_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 80, 2>
WelcomeMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    WelcomeMessage_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::RotomProtos::WelcomeMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string worker_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0,
      PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_.worker_id_)}},
    // string origin = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0,
      PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_.origin_)}},
    // int32 version_code = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WelcomeMessage, _impl_.version_code_), 5>(),
     {24, 5, 0,
      PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_.version_code_)}},
    // string version_name = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 2, 0,
      PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_.version_name_)}},
    // string useragent = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 3, 0,
      PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_.useragent_)}},
    // string device_id = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 4, 0,
      PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_.device_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string worker_id = 1;
    {PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_.worker_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string origin = 2;
    {PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_.origin_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 version_code = 3;
    {PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_.version_code_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string version_name = 4;
    {PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_.version_name_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string useragent = 5;
    {PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_.useragent_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string device_id = 6;
    {PROTOBUF_FIELD_OFFSET(WelcomeMessage, _impl_.device_id_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\32\11\6\0\14\11\11\0"
    "RotomProtos.WelcomeMessage"
    "worker_id"
    "origin"
    "version_name"
    "useragent"
    "device_id"
  }},
};
PROTOBUF_NOINLINE void WelcomeMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:RotomProtos.WelcomeMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x0000001fU)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      _impl_.worker_id_.ClearNonDefaultToEmpty();
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      _impl_.origin_.ClearNonDefaultToEmpty();
    }
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      _impl_.version_name_.ClearNonDefaultToEmpty();
    }
    if (CheckHasBit(cached_has_bits, 0x00000008U)) {
      _impl_.useragent_.ClearNonDefaultToEmpty();
    }
    if (CheckHasBit(cached_has_bits, 0x00000010U)) {
      _impl_.device_id_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.version_code_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL WelcomeMessage::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const WelcomeMessage& this_ = static_cast<const WelcomeMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL WelcomeMessage::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const WelcomeMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    this_.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:RotomProtos.WelcomeMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // string worker_id = 1;
  if (CheckHasBit(cached_has_bits, 0x00000001U)) {
    if (!this_._internal_worker_id().empty()) {
      const ::std::string& _s = this_._internal_worker_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "RotomProtos.WelcomeMessage.worker_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string origin = 2;
  if (CheckHasBit(cached_has_bits, 0x00000002U)) {
    if (!this_._internal_origin().empty()) {
      const ::std::string& _s = this_._internal_origin();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "RotomProtos.WelcomeMessage.origin");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // int32 version_code = 3;
  if (CheckHasBit(cached_has_bits, 0x00000020U)) {
    if (this_._internal_version_code() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_version_code(), target);
    }
  }

  // string version_name = 4;
  if (CheckHasBit(cached_has_bits, 0x00000004U)) {
    if (!this_._internal_version_name().empty()) {
      const ::std::string& _s = this_._internal_version_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "RotomProtos.WelcomeMessage.version_name");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // string useragent = 5;
  if (CheckHasBit(cached_has_bits, 0x00000008U)) {
    if (!this_._internal_useragent().empty()) {
      const ::std::string& _s = this_._internal_useragent();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "RotomProtos.WelcomeMessage.useragent");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  // string device_id = 6;
  if (CheckHasBit(cached_has_bits, 0x00000010U)) {
    if (!this_._internal_device_id().empty()) {
      const ::std::string& _s = this_._internal_device_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "RotomProtos.WelcomeMessage.device_id");
      target = stream->WriteStringMaybeAliased(6, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RotomProtos.WelcomeMessage)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t WelcomeMessage::ByteSizeLong(const MessageLite& base) {
  const WelcomeMessage& this_ = static_cast<const WelcomeMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t WelcomeMessage::ByteSizeLong() const {
  const WelcomeMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:RotomProtos.WelcomeMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x0000003fU)) {
    // string worker_id = 1;
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!this_._internal_worker_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_worker_id());
      }
    }
    // string origin = 2;
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (!this_._internal_origin().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_origin());
      }
    }
    // string version_name = 4;
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      if (!this_._internal_version_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_version_name());
      }
    }
    // string useragent = 5;
    if (CheckHasBit(cached_has_bits, 0x00000008U)) {
      if (!this_._internal_useragent().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_useragent());
      }
    }
    // string device_id = 6;
    if (CheckHasBit(cached_has_bits, 0x00000010U)) {
      if (!this_._internal_device_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_device_id());
      }
    }
    // int32 version_code = 3;
    if (CheckHasBit(cached_has_bits, 0x00000020U)) {
      if (this_._internal_version_code() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_version_code());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void WelcomeMessage::MergeImpl(::google::protobuf::MessageLite& to_msg,
                            const ::google::protobuf::MessageLite& from_msg) {
   auto* const _this =
      static_cast<WelcomeMessage*>(&to_msg);
  auto& from = static_cast<const WelcomeMessage&>(from_msg);
  if constexpr (::_pbi::DebugHardenCheckHasBitConsistency()) {
    from.CheckHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:RotomProtos.WelcomeMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (BatchCheckHasBit(cached_has_bits, 0x0000003fU)) {
    if (CheckHasBit(cached_has_bits, 0x00000001U)) {
      if (!from._internal_worker_id().empty()) {
        _this->_internal_set_worker_id(from._internal_worker_id());
      } else {
        if (_this->_impl_.worker_id_.IsDefault()) {
          _this->_internal_set_worker_id("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000002U)) {
      if (!from._internal_origin().empty()) {
        _this->_internal_set_origin(from._internal_origin());
      } else {
        if (_this->_impl_.origin_.IsDefault()) {
          _this->_internal_set_origin("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000004U)) {
      if (!from._internal_version_name().empty()) {
        _this->_internal_set_version_name(from._internal_version_name());
      } else {
        if (_this->_impl_.version_name_.IsDefault()) {
          _this->_internal_set_version_name("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000008U)) {
      if (!from._internal_useragent().empty()) {
        _this->_internal_set_useragent(from._internal_useragent());
      } else {
        if (_this->_impl_.useragent_.IsDefault()) {
          _this->_internal_set_useragent("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000010U)) {
      if (!from._internal_device_id().empty()) {
        _this->_internal_set_device_id(from._internal_device_id());
      } else {
        if (_this->_impl_.device_id_.IsDefault()) {
          _this->_internal_set_device_id("");
        }
      }
    }
    if (CheckHasBit(cached_has_bits, 0x00000020U)) {
      if (from._internal_version_code() != 0) {
        _this->_impl_.version_code_ = from._impl_.version_code_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}

void WelcomeMessage::CopyFrom(const WelcomeMessage& from) {
  // @@protoc_insertion_point(class_specific_copy_from_start:RotomProtos.WelcomeMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WelcomeMessage::InternalSwap(WelcomeMessage* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.worker_id_, &other->_impl_.worker_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.origin_, &other->_impl_.origin_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.version_name_, &other->_impl_.version_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.useragent_, &other->_impl_.useragent_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_id_, &other->_impl_.device_id_, arena);
  swap(_impl_.version_code_, other->_impl_.version_code_);
}

::google::protobuf::Metadata WelcomeMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace RotomProtos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_rotom_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
